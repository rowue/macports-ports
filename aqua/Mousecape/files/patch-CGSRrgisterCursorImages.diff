diff --git a/Mousecape/mousecloak/CGSInternal/CGSCursor.h b/Mousecape/mousecloak/CGSInternal/CGSCursor.h
index 07e70fc..b5637db 100755
--- a/Mousecape/mousecloak/CGSInternal/CGSCursor.h
+++ b/Mousecape/mousecloak/CGSInternal/CGSCursor.h
@@ -49,7 +49,7 @@ CG_EXTERN CGError CGSGetRegisteredCursorImages(CGSConnectionID cid, char *cursor
 
 // Verified, stable
 /*! Registers a cursor in the current CGSConnection or globally */
-CG_EXTERN CGError CGSRegisterCursorWithImages(CGSConnectionID cid, char *cursorName, bool setGlobally, bool instantly, NSUInteger frameCount, CFArrayRef imageArray, CGSize cursorSize, CGPoint hotspot, int *seed, CGRect bounds, CGFloat frameDuration, NSInteger repeatCount);
+CG_EXTERN CGError CGSRegisterCursorWithImages(CGSConnectionID cid, char *cursorName, bool setGlobally, bool instantly, CGSize cursorSize, CGPoint hotspot, NSUInteger frameCount, CGFloat frameDuration, CFArrayRef imageArray, int *seed);
 
 CG_EXTERN CGError CGSSetSystemDefinedCursor(CGSConnectionID cid, CGSCursorID cursor);
 
diff --git a/Mousecape/mousecloak/apply.m b/Mousecape/mousecloak/apply.m
index 1f1b248..5c6f64f 100644
--- a/Mousecape/mousecloak/apply.m
+++ b/Mousecape/mousecloak/apply.m
@@ -19,19 +19,17 @@ BOOL applyCursorForIdentifier(NSUInteger frameCount, CGFloat frameDuration, CGPo
     }
 
     char *idenfifier = (char *)ident.UTF8String;
-    int seed;
+    int seed = 0;
     CGError err = CGSRegisterCursorWithImages(CGSMainConnectionID(),
                                               idenfifier,
                                               true,
                                               true,
-                                              frameCount,
-                                              (__bridge CFArrayRef)images,
                                               size,
                                               hotSpot,
-                                              &seed,
-                                              CGRectMake(hotSpot.x, hotSpot.y, size.width, size.height),
+                                              frameCount,
                                               frameDuration,
-                                              0);
+                                              (__bridge CFArrayRef)images,
+                                              &seed);
     
     return (err == kCGErrorSuccess);
 }
