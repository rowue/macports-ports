# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0

github.setup        h4l json.bash 0.2.2 v
github.tarball_from archive
revision            0

description         Command-line tool and bash library that creates JSON

long_description    \
    ${name}'s one thing is to get shell-native data \(environment variables, \
    files, program output\) to somewhere else, using JSON encapsulate it \
    robustly. Creating JSON from the command line or a shell script can be \
    useful when\: - you need some ad-hoc JSON to interact with a \
    JSON-consuming application, - you need to bundle up some data to share or \
    move elsewhere. JSON can a good alternative to base64-encoding or a file \
    archive. It does no transformation or filtering itself, instead it pulls \
    data from things you already know how to use, like files, command-line \
    arguments, environment variables, shell pipelines and shell scripts. It \
    glues together data from these sources, giving it enough structure to \
    make the data easy to consume reliably in downstream programs. It\'s \
    something like a reverse tee â€” it pulls together data sources, using JSON \
    to represent the aggregation. It\'s not an alternative to to \
    data-processing tools like jq, rather it helps assemble JSON to send into \
    JSON-consuming tools like jq.

categories          textproc
platforms           any
license             MIT
maintainers         {gmail.com:herby.gillot @herbygillot} \
                    openmaintainer
supported_archs     noarch

checksums           rmd160  98c9f916b0788a43e3692960058252ec45914eb7 \
                    sha256  9b1f7913873fceea9ecf09dd961295342b8a216bc13a4e6caab327097a3354e5 \
                    size    87504

depends_lib-append  port:bash

use_configure       no

build {}

patch {
    reinplace -W ${worksrcpath} \
        "s|#!/usr/bin/env bash|#!${prefix}/bin/bash|" ${name}
}

destroot {
    xinstall -m 0755 ${worksrcpath}/${name} ${destroot}${prefix}/bin/jb
    ln -sf ${prefix}/bin/jb ${destroot}${prefix}/bin/jb-array
}
